//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ITravel_OnTour.Models.ORM_Agencia
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class OnTourEntities : DbContext
    {
        public OnTourEntities()
            : base("name=OnTourEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ACTIVIDAD> ACTIVIDAD { get; set; }
        public virtual DbSet<ACTIVIDADAPORTES> ACTIVIDADAPORTES { get; set; }
        public virtual DbSet<ACTIVIDADVIAJE> ACTIVIDADVIAJE { get; set; }
        public virtual DbSet<ALUMNO> ALUMNO { get; set; }
        public virtual DbSet<ANEXOS> ANEXOS { get; set; }
        public virtual DbSet<APODERADO> APODERADO { get; set; }
        public virtual DbSet<ASEGURADORA> ASEGURADORA { get; set; }
        public virtual DbSet<COLABORADOR> COLABORADOR { get; set; }
        public virtual DbSet<COLEGIO> COLEGIO { get; set; }
        public virtual DbSet<COMUNA> COMUNA { get; set; }
        public virtual DbSet<CONTRATO> CONTRATO { get; set; }
        public virtual DbSet<CUENTAALUMNO> CUENTAALUMNO { get; set; }
        public virtual DbSet<CUENTACURSO> CUENTACURSO { get; set; }
        public virtual DbSet<CUENTAUSUARIO> CUENTAUSUARIO { get; set; }
        public virtual DbSet<CURSO> CURSO { get; set; }
        public virtual DbSet<DESTINO> DESTINO { get; set; }
        public virtual DbSet<ESTADOCUENTA> ESTADOCUENTA { get; set; }
        public virtual DbSet<ITINERARIO> ITINERARIO { get; set; }
        public virtual DbSet<MENU> MENU { get; set; }
        public virtual DbSet<ORIGEN> ORIGEN { get; set; }
        public virtual DbSet<PAGO> PAGO { get; set; }
        public virtual DbSet<PAIS> PAIS { get; set; }
        public virtual DbSet<PERFIL> PERFIL { get; set; }
        public virtual DbSet<PERMISO> PERMISO { get; set; }
        public virtual DbSet<POLIZASEGURO> POLIZASEGURO { get; set; }
        public virtual DbSet<REGION> REGION { get; set; }
        public virtual DbSet<SERVICIO> SERVICIO { get; set; }
        public virtual DbSet<TIPOACTIVIDAD> TIPOACTIVIDAD { get; set; }
        public virtual DbSet<TIPOACTIVIDADVIAJE> TIPOACTIVIDADVIAJE { get; set; }
        public virtual DbSet<TIPOCOLABORADOR> TIPOCOLABORADOR { get; set; }
        public virtual DbSet<TIPOCONTRATO> TIPOCONTRATO { get; set; }
        public virtual DbSet<TIPOCUENTA> TIPOCUENTA { get; set; }
        public virtual DbSet<TIPOPAGO> TIPOPAGO { get; set; }
        public virtual DbSet<TIPOSEGURO> TIPOSEGURO { get; set; }
        public virtual DbSet<TIPOSERVICIO> TIPOSERVICIO { get; set; }
    
        public virtual int INSERT_ACTIVIDAD(Nullable<decimal> iDACTIVIDAD, Nullable<decimal> iDCURSO, Nullable<decimal> iDTIPOACTIVIDAD, string nOMBRE, Nullable<System.DateTime> fECHAINICIO, Nullable<System.DateTime> fECHATERMINO, Nullable<decimal> cANTIDADPERSONA, Nullable<decimal> mONTORECAUDADO)
        {
            var iDACTIVIDADParameter = iDACTIVIDAD.HasValue ?
                new ObjectParameter("IDACTIVIDAD", iDACTIVIDAD) :
                new ObjectParameter("IDACTIVIDAD", typeof(decimal));
    
            var iDCURSOParameter = iDCURSO.HasValue ?
                new ObjectParameter("IDCURSO", iDCURSO) :
                new ObjectParameter("IDCURSO", typeof(decimal));
    
            var iDTIPOACTIVIDADParameter = iDTIPOACTIVIDAD.HasValue ?
                new ObjectParameter("IDTIPOACTIVIDAD", iDTIPOACTIVIDAD) :
                new ObjectParameter("IDTIPOACTIVIDAD", typeof(decimal));
    
            var nOMBREParameter = nOMBRE != null ?
                new ObjectParameter("NOMBRE", nOMBRE) :
                new ObjectParameter("NOMBRE", typeof(string));
    
            var fECHAINICIOParameter = fECHAINICIO.HasValue ?
                new ObjectParameter("FECHAINICIO", fECHAINICIO) :
                new ObjectParameter("FECHAINICIO", typeof(System.DateTime));
    
            var fECHATERMINOParameter = fECHATERMINO.HasValue ?
                new ObjectParameter("FECHATERMINO", fECHATERMINO) :
                new ObjectParameter("FECHATERMINO", typeof(System.DateTime));
    
            var cANTIDADPERSONAParameter = cANTIDADPERSONA.HasValue ?
                new ObjectParameter("CANTIDADPERSONA", cANTIDADPERSONA) :
                new ObjectParameter("CANTIDADPERSONA", typeof(decimal));
    
            var mONTORECAUDADOParameter = mONTORECAUDADO.HasValue ?
                new ObjectParameter("MONTORECAUDADO", mONTORECAUDADO) :
                new ObjectParameter("MONTORECAUDADO", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_ACTIVIDAD", iDACTIVIDADParameter, iDCURSOParameter, iDTIPOACTIVIDADParameter, nOMBREParameter, fECHAINICIOParameter, fECHATERMINOParameter, cANTIDADPERSONAParameter, mONTORECAUDADOParameter);
        }
    
        public virtual int INSERT_ACTIVIDADAPORTES(Nullable<decimal> iDACTIVIDADAPORTES, Nullable<decimal> iDCUENTAALUMNO, Nullable<System.DateTime> fECHA, Nullable<decimal> mONTO)
        {
            var iDACTIVIDADAPORTESParameter = iDACTIVIDADAPORTES.HasValue ?
                new ObjectParameter("IDACTIVIDADAPORTES", iDACTIVIDADAPORTES) :
                new ObjectParameter("IDACTIVIDADAPORTES", typeof(decimal));
    
            var iDCUENTAALUMNOParameter = iDCUENTAALUMNO.HasValue ?
                new ObjectParameter("IDCUENTAALUMNO", iDCUENTAALUMNO) :
                new ObjectParameter("IDCUENTAALUMNO", typeof(decimal));
    
            var fECHAParameter = fECHA.HasValue ?
                new ObjectParameter("FECHA", fECHA) :
                new ObjectParameter("FECHA", typeof(System.DateTime));
    
            var mONTOParameter = mONTO.HasValue ?
                new ObjectParameter("MONTO", mONTO) :
                new ObjectParameter("MONTO", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_ACTIVIDADAPORTES", iDACTIVIDADAPORTESParameter, iDCUENTAALUMNOParameter, fECHAParameter, mONTOParameter);
        }
    
        public virtual int INSERT_ACTIVIDADVIAJE(Nullable<decimal> iDACTIVIDADVIAJE, string nOMBRE, string dESCRIPCION, Nullable<System.DateTime> fECHAINICIO, Nullable<System.DateTime> fECHATERMINO, Nullable<decimal> iDTIPOACTIVIDADVIAJE)
        {
            var iDACTIVIDADVIAJEParameter = iDACTIVIDADVIAJE.HasValue ?
                new ObjectParameter("IDACTIVIDADVIAJE", iDACTIVIDADVIAJE) :
                new ObjectParameter("IDACTIVIDADVIAJE", typeof(decimal));
    
            var nOMBREParameter = nOMBRE != null ?
                new ObjectParameter("NOMBRE", nOMBRE) :
                new ObjectParameter("NOMBRE", typeof(string));
    
            var dESCRIPCIONParameter = dESCRIPCION != null ?
                new ObjectParameter("DESCRIPCION", dESCRIPCION) :
                new ObjectParameter("DESCRIPCION", typeof(string));
    
            var fECHAINICIOParameter = fECHAINICIO.HasValue ?
                new ObjectParameter("FECHAINICIO", fECHAINICIO) :
                new ObjectParameter("FECHAINICIO", typeof(System.DateTime));
    
            var fECHATERMINOParameter = fECHATERMINO.HasValue ?
                new ObjectParameter("FECHATERMINO", fECHATERMINO) :
                new ObjectParameter("FECHATERMINO", typeof(System.DateTime));
    
            var iDTIPOACTIVIDADVIAJEParameter = iDTIPOACTIVIDADVIAJE.HasValue ?
                new ObjectParameter("IDTIPOACTIVIDADVIAJE", iDTIPOACTIVIDADVIAJE) :
                new ObjectParameter("IDTIPOACTIVIDADVIAJE", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_ACTIVIDADVIAJE", iDACTIVIDADVIAJEParameter, nOMBREParameter, dESCRIPCIONParameter, fECHAINICIOParameter, fECHATERMINOParameter, iDTIPOACTIVIDADVIAJEParameter);
        }
    
        public virtual int INSERT_ALUMNO(Nullable<decimal> iDCOLEGIO, Nullable<decimal> iDAPODERADO, Nullable<decimal> iDCURSO, string nOMBRE, string dIRECCIÓN, Nullable<decimal> tELEFONO, string cORREOELECTRONICO)
        {
            var iDCOLEGIOParameter = iDCOLEGIO.HasValue ?
                new ObjectParameter("IDCOLEGIO", iDCOLEGIO) :
                new ObjectParameter("IDCOLEGIO", typeof(decimal));
    
            var iDAPODERADOParameter = iDAPODERADO.HasValue ?
                new ObjectParameter("IDAPODERADO", iDAPODERADO) :
                new ObjectParameter("IDAPODERADO", typeof(decimal));
    
            var iDCURSOParameter = iDCURSO.HasValue ?
                new ObjectParameter("IDCURSO", iDCURSO) :
                new ObjectParameter("IDCURSO", typeof(decimal));
    
            var nOMBREParameter = nOMBRE != null ?
                new ObjectParameter("NOMBRE", nOMBRE) :
                new ObjectParameter("NOMBRE", typeof(string));
    
            var dIRECCIÓNParameter = dIRECCIÓN != null ?
                new ObjectParameter("DIRECCIÓN", dIRECCIÓN) :
                new ObjectParameter("DIRECCIÓN", typeof(string));
    
            var tELEFONOParameter = tELEFONO.HasValue ?
                new ObjectParameter("TELEFONO", tELEFONO) :
                new ObjectParameter("TELEFONO", typeof(decimal));
    
            var cORREOELECTRONICOParameter = cORREOELECTRONICO != null ?
                new ObjectParameter("CORREOELECTRONICO", cORREOELECTRONICO) :
                new ObjectParameter("CORREOELECTRONICO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_ALUMNO", iDCOLEGIOParameter, iDAPODERADOParameter, iDCURSOParameter, nOMBREParameter, dIRECCIÓNParameter, tELEFONOParameter, cORREOELECTRONICOParameter);
        }
    
        public virtual int INSERT_ANEXOS(Nullable<decimal> iDANEXOS, Nullable<decimal> iDCONTRATO, string fILE, string tOKEN, Nullable<System.DateTime> fECHA)
        {
            var iDANEXOSParameter = iDANEXOS.HasValue ?
                new ObjectParameter("IDANEXOS", iDANEXOS) :
                new ObjectParameter("IDANEXOS", typeof(decimal));
    
            var iDCONTRATOParameter = iDCONTRATO.HasValue ?
                new ObjectParameter("IDCONTRATO", iDCONTRATO) :
                new ObjectParameter("IDCONTRATO", typeof(decimal));
    
            var fILEParameter = fILE != null ?
                new ObjectParameter("FILE", fILE) :
                new ObjectParameter("FILE", typeof(string));
    
            var tOKENParameter = tOKEN != null ?
                new ObjectParameter("TOKEN", tOKEN) :
                new ObjectParameter("TOKEN", typeof(string));
    
            var fECHAParameter = fECHA.HasValue ?
                new ObjectParameter("FECHA", fECHA) :
                new ObjectParameter("FECHA", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_ANEXOS", iDANEXOSParameter, iDCONTRATOParameter, fILEParameter, tOKENParameter, fECHAParameter);
        }
    
        public virtual int INSERT_APODERADO(Nullable<decimal> iDAPODERADO, string nOMBRE, string rUT, string dIRECCION, Nullable<System.DateTime> tELEFONO, string cELULAR)
        {
            var iDAPODERADOParameter = iDAPODERADO.HasValue ?
                new ObjectParameter("IDAPODERADO", iDAPODERADO) :
                new ObjectParameter("IDAPODERADO", typeof(decimal));
    
            var nOMBREParameter = nOMBRE != null ?
                new ObjectParameter("NOMBRE", nOMBRE) :
                new ObjectParameter("NOMBRE", typeof(string));
    
            var rUTParameter = rUT != null ?
                new ObjectParameter("RUT", rUT) :
                new ObjectParameter("RUT", typeof(string));
    
            var dIRECCIONParameter = dIRECCION != null ?
                new ObjectParameter("DIRECCION", dIRECCION) :
                new ObjectParameter("DIRECCION", typeof(string));
    
            var tELEFONOParameter = tELEFONO.HasValue ?
                new ObjectParameter("TELEFONO", tELEFONO) :
                new ObjectParameter("TELEFONO", typeof(System.DateTime));
    
            var cELULARParameter = cELULAR != null ?
                new ObjectParameter("CELULAR", cELULAR) :
                new ObjectParameter("CELULAR", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_APODERADO", iDAPODERADOParameter, nOMBREParameter, rUTParameter, dIRECCIONParameter, tELEFONOParameter, cELULARParameter);
        }
    
        public virtual int INSERT_ASEGURADORA(Nullable<decimal> iDASEGURADORA, string nOMBRE, string dIRECCION, Nullable<decimal> tELEFONO, string eMAIL, string nOMBRECONTACTO, string rUT)
        {
            var iDASEGURADORAParameter = iDASEGURADORA.HasValue ?
                new ObjectParameter("IDASEGURADORA", iDASEGURADORA) :
                new ObjectParameter("IDASEGURADORA", typeof(decimal));
    
            var nOMBREParameter = nOMBRE != null ?
                new ObjectParameter("NOMBRE", nOMBRE) :
                new ObjectParameter("NOMBRE", typeof(string));
    
            var dIRECCIONParameter = dIRECCION != null ?
                new ObjectParameter("DIRECCION", dIRECCION) :
                new ObjectParameter("DIRECCION", typeof(string));
    
            var tELEFONOParameter = tELEFONO.HasValue ?
                new ObjectParameter("TELEFONO", tELEFONO) :
                new ObjectParameter("TELEFONO", typeof(decimal));
    
            var eMAILParameter = eMAIL != null ?
                new ObjectParameter("EMAIL", eMAIL) :
                new ObjectParameter("EMAIL", typeof(string));
    
            var nOMBRECONTACTOParameter = nOMBRECONTACTO != null ?
                new ObjectParameter("NOMBRECONTACTO", nOMBRECONTACTO) :
                new ObjectParameter("NOMBRECONTACTO", typeof(string));
    
            var rUTParameter = rUT != null ?
                new ObjectParameter("RUT", rUT) :
                new ObjectParameter("RUT", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_ASEGURADORA", iDASEGURADORAParameter, nOMBREParameter, dIRECCIONParameter, tELEFONOParameter, eMAILParameter, nOMBRECONTACTOParameter, rUTParameter);
        }
    
        public virtual int INSERT_COLABORADOR(Nullable<decimal> iDCOLABORADOR, string nOMBRE, string dIRECCION, Nullable<decimal> tELEFONO, Nullable<decimal> iDCUENTAUSUARIO, string iDTIPOCOLABORADOR, string rUT)
        {
            var iDCOLABORADORParameter = iDCOLABORADOR.HasValue ?
                new ObjectParameter("IDCOLABORADOR", iDCOLABORADOR) :
                new ObjectParameter("IDCOLABORADOR", typeof(decimal));
    
            var nOMBREParameter = nOMBRE != null ?
                new ObjectParameter("NOMBRE", nOMBRE) :
                new ObjectParameter("NOMBRE", typeof(string));
    
            var dIRECCIONParameter = dIRECCION != null ?
                new ObjectParameter("DIRECCION", dIRECCION) :
                new ObjectParameter("DIRECCION", typeof(string));
    
            var tELEFONOParameter = tELEFONO.HasValue ?
                new ObjectParameter("TELEFONO", tELEFONO) :
                new ObjectParameter("TELEFONO", typeof(decimal));
    
            var iDCUENTAUSUARIOParameter = iDCUENTAUSUARIO.HasValue ?
                new ObjectParameter("IDCUENTAUSUARIO", iDCUENTAUSUARIO) :
                new ObjectParameter("IDCUENTAUSUARIO", typeof(decimal));
    
            var iDTIPOCOLABORADORParameter = iDTIPOCOLABORADOR != null ?
                new ObjectParameter("IDTIPOCOLABORADOR", iDTIPOCOLABORADOR) :
                new ObjectParameter("IDTIPOCOLABORADOR", typeof(string));
    
            var rUTParameter = rUT != null ?
                new ObjectParameter("RUT", rUT) :
                new ObjectParameter("RUT", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_COLABORADOR", iDCOLABORADORParameter, nOMBREParameter, dIRECCIONParameter, tELEFONOParameter, iDCUENTAUSUARIOParameter, iDTIPOCOLABORADORParameter, rUTParameter);
        }
    
        public virtual int INSERT_COMUNA(Nullable<decimal> iDCOMUNA, string nOMBRE, Nullable<decimal> iDREGION)
        {
            var iDCOMUNAParameter = iDCOMUNA.HasValue ?
                new ObjectParameter("IDCOMUNA", iDCOMUNA) :
                new ObjectParameter("IDCOMUNA", typeof(decimal));
    
            var nOMBREParameter = nOMBRE != null ?
                new ObjectParameter("NOMBRE", nOMBRE) :
                new ObjectParameter("NOMBRE", typeof(string));
    
            var iDREGIONParameter = iDREGION.HasValue ?
                new ObjectParameter("IDREGION", iDREGION) :
                new ObjectParameter("IDREGION", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_COMUNA", iDCOMUNAParameter, nOMBREParameter, iDREGIONParameter);
        }
    
        public virtual int INSERT_CONTRATO(Nullable<decimal> iDCOLABORADOR, Nullable<decimal> iDTIPOCONTRATO, Nullable<decimal> iDPOLIZASEGUROS, Nullable<System.DateTime> fECHAINICIO, Nullable<System.DateTime> fECHATERMINO, Nullable<decimal> iDSERVICIO, string nOMBRE)
        {
            var iDCOLABORADORParameter = iDCOLABORADOR.HasValue ?
                new ObjectParameter("IDCOLABORADOR", iDCOLABORADOR) :
                new ObjectParameter("IDCOLABORADOR", typeof(decimal));
    
            var iDTIPOCONTRATOParameter = iDTIPOCONTRATO.HasValue ?
                new ObjectParameter("IDTIPOCONTRATO", iDTIPOCONTRATO) :
                new ObjectParameter("IDTIPOCONTRATO", typeof(decimal));
    
            var iDPOLIZASEGUROSParameter = iDPOLIZASEGUROS.HasValue ?
                new ObjectParameter("IDPOLIZASEGUROS", iDPOLIZASEGUROS) :
                new ObjectParameter("IDPOLIZASEGUROS", typeof(decimal));
    
            var fECHAINICIOParameter = fECHAINICIO.HasValue ?
                new ObjectParameter("FECHAINICIO", fECHAINICIO) :
                new ObjectParameter("FECHAINICIO", typeof(System.DateTime));
    
            var fECHATERMINOParameter = fECHATERMINO.HasValue ?
                new ObjectParameter("FECHATERMINO", fECHATERMINO) :
                new ObjectParameter("FECHATERMINO", typeof(System.DateTime));
    
            var iDSERVICIOParameter = iDSERVICIO.HasValue ?
                new ObjectParameter("IDSERVICIO", iDSERVICIO) :
                new ObjectParameter("IDSERVICIO", typeof(decimal));
    
            var nOMBREParameter = nOMBRE != null ?
                new ObjectParameter("NOMBRE", nOMBRE) :
                new ObjectParameter("NOMBRE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_CONTRATO", iDCOLABORADORParameter, iDTIPOCONTRATOParameter, iDPOLIZASEGUROSParameter, fECHAINICIOParameter, fECHATERMINOParameter, iDSERVICIOParameter, nOMBREParameter);
        }
    
        public virtual int INSERT_CUENTAALUMNO(Nullable<decimal> iDTIPOCUENTA, Nullable<decimal> iDALUMNO, Nullable<decimal> cUPOTOTAL, Nullable<decimal> cUPOUTILIZADO, Nullable<decimal> aPORTE)
        {
            var iDTIPOCUENTAParameter = iDTIPOCUENTA.HasValue ?
                new ObjectParameter("IDTIPOCUENTA", iDTIPOCUENTA) :
                new ObjectParameter("IDTIPOCUENTA", typeof(decimal));
    
            var iDALUMNOParameter = iDALUMNO.HasValue ?
                new ObjectParameter("IDALUMNO", iDALUMNO) :
                new ObjectParameter("IDALUMNO", typeof(decimal));
    
            var cUPOTOTALParameter = cUPOTOTAL.HasValue ?
                new ObjectParameter("CUPOTOTAL", cUPOTOTAL) :
                new ObjectParameter("CUPOTOTAL", typeof(decimal));
    
            var cUPOUTILIZADOParameter = cUPOUTILIZADO.HasValue ?
                new ObjectParameter("CUPOUTILIZADO", cUPOUTILIZADO) :
                new ObjectParameter("CUPOUTILIZADO", typeof(decimal));
    
            var aPORTEParameter = aPORTE.HasValue ?
                new ObjectParameter("APORTE", aPORTE) :
                new ObjectParameter("APORTE", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_CUENTAALUMNO", iDTIPOCUENTAParameter, iDALUMNOParameter, cUPOTOTALParameter, cUPOUTILIZADOParameter, aPORTEParameter);
        }
    
        public virtual int INSERT_CUENTACURSO(Nullable<decimal> iDCURSO, Nullable<decimal> sALDO, string nOMBRE, string dESCRIPCION, string eNCARGADO)
        {
            var iDCURSOParameter = iDCURSO.HasValue ?
                new ObjectParameter("IDCURSO", iDCURSO) :
                new ObjectParameter("IDCURSO", typeof(decimal));
    
            var sALDOParameter = sALDO.HasValue ?
                new ObjectParameter("SALDO", sALDO) :
                new ObjectParameter("SALDO", typeof(decimal));
    
            var nOMBREParameter = nOMBRE != null ?
                new ObjectParameter("NOMBRE", nOMBRE) :
                new ObjectParameter("NOMBRE", typeof(string));
    
            var dESCRIPCIONParameter = dESCRIPCION != null ?
                new ObjectParameter("DESCRIPCION", dESCRIPCION) :
                new ObjectParameter("DESCRIPCION", typeof(string));
    
            var eNCARGADOParameter = eNCARGADO != null ?
                new ObjectParameter("ENCARGADO", eNCARGADO) :
                new ObjectParameter("ENCARGADO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_CUENTACURSO", iDCURSOParameter, sALDOParameter, nOMBREParameter, dESCRIPCIONParameter, eNCARGADOParameter);
        }
    
        public virtual int INSERT_CUENTAUSUARIO(Nullable<decimal> iDCUENTAUSUARIO, Nullable<decimal> iDPERFIL, string nOMBREUSUARIO, string cONTRASENA, string aPELLIDO, string cORREOELECTRONICO)
        {
            var iDCUENTAUSUARIOParameter = iDCUENTAUSUARIO.HasValue ?
                new ObjectParameter("IDCUENTAUSUARIO", iDCUENTAUSUARIO) :
                new ObjectParameter("IDCUENTAUSUARIO", typeof(decimal));
    
            var iDPERFILParameter = iDPERFIL.HasValue ?
                new ObjectParameter("IDPERFIL", iDPERFIL) :
                new ObjectParameter("IDPERFIL", typeof(decimal));
    
            var nOMBREUSUARIOParameter = nOMBREUSUARIO != null ?
                new ObjectParameter("NOMBREUSUARIO", nOMBREUSUARIO) :
                new ObjectParameter("NOMBREUSUARIO", typeof(string));
    
            var cONTRASENAParameter = cONTRASENA != null ?
                new ObjectParameter("CONTRASENA", cONTRASENA) :
                new ObjectParameter("CONTRASENA", typeof(string));
    
            var aPELLIDOParameter = aPELLIDO != null ?
                new ObjectParameter("APELLIDO", aPELLIDO) :
                new ObjectParameter("APELLIDO", typeof(string));
    
            var cORREOELECTRONICOParameter = cORREOELECTRONICO != null ?
                new ObjectParameter("CORREOELECTRONICO", cORREOELECTRONICO) :
                new ObjectParameter("CORREOELECTRONICO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_CUENTAUSUARIO", iDCUENTAUSUARIOParameter, iDPERFILParameter, nOMBREUSUARIOParameter, cONTRASENAParameter, aPELLIDOParameter, cORREOELECTRONICOParameter);
        }
    
        public virtual int INSERT_CURSO(Nullable<decimal> iDCURSO, Nullable<decimal> iDCOLEGIO, string nOMBRE, string pROFESORJEFE)
        {
            var iDCURSOParameter = iDCURSO.HasValue ?
                new ObjectParameter("IDCURSO", iDCURSO) :
                new ObjectParameter("IDCURSO", typeof(decimal));
    
            var iDCOLEGIOParameter = iDCOLEGIO.HasValue ?
                new ObjectParameter("IDCOLEGIO", iDCOLEGIO) :
                new ObjectParameter("IDCOLEGIO", typeof(decimal));
    
            var nOMBREParameter = nOMBRE != null ?
                new ObjectParameter("NOMBRE", nOMBRE) :
                new ObjectParameter("NOMBRE", typeof(string));
    
            var pROFESORJEFEParameter = pROFESORJEFE != null ?
                new ObjectParameter("PROFESORJEFE", pROFESORJEFE) :
                new ObjectParameter("PROFESORJEFE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_CURSO", iDCURSOParameter, iDCOLEGIOParameter, nOMBREParameter, pROFESORJEFEParameter);
        }
    
        public virtual int INSERT_DESTINO(Nullable<decimal> iDDESTINO, string nOMBREDESTINO, Nullable<decimal> iDPAIS)
        {
            var iDDESTINOParameter = iDDESTINO.HasValue ?
                new ObjectParameter("IDDESTINO", iDDESTINO) :
                new ObjectParameter("IDDESTINO", typeof(decimal));
    
            var nOMBREDESTINOParameter = nOMBREDESTINO != null ?
                new ObjectParameter("NOMBREDESTINO", nOMBREDESTINO) :
                new ObjectParameter("NOMBREDESTINO", typeof(string));
    
            var iDPAISParameter = iDPAIS.HasValue ?
                new ObjectParameter("IDPAIS", iDPAIS) :
                new ObjectParameter("IDPAIS", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_DESTINO", iDDESTINOParameter, nOMBREDESTINOParameter, iDPAISParameter);
        }
    
        public virtual int INSERT_ITINERARIO(Nullable<decimal> iDDESTINO, Nullable<decimal> iDORIGEN, Nullable<decimal> iDACTIVIDADVIAJE, Nullable<System.DateTime> fECHAINICIO, Nullable<System.DateTime> fECHATERMINO, Nullable<decimal> iDCONTRATO)
        {
            var iDDESTINOParameter = iDDESTINO.HasValue ?
                new ObjectParameter("IDDESTINO", iDDESTINO) :
                new ObjectParameter("IDDESTINO", typeof(decimal));
    
            var iDORIGENParameter = iDORIGEN.HasValue ?
                new ObjectParameter("IDORIGEN", iDORIGEN) :
                new ObjectParameter("IDORIGEN", typeof(decimal));
    
            var iDACTIVIDADVIAJEParameter = iDACTIVIDADVIAJE.HasValue ?
                new ObjectParameter("IDACTIVIDADVIAJE", iDACTIVIDADVIAJE) :
                new ObjectParameter("IDACTIVIDADVIAJE", typeof(decimal));
    
            var fECHAINICIOParameter = fECHAINICIO.HasValue ?
                new ObjectParameter("FECHAINICIO", fECHAINICIO) :
                new ObjectParameter("FECHAINICIO", typeof(System.DateTime));
    
            var fECHATERMINOParameter = fECHATERMINO.HasValue ?
                new ObjectParameter("FECHATERMINO", fECHATERMINO) :
                new ObjectParameter("FECHATERMINO", typeof(System.DateTime));
    
            var iDCONTRATOParameter = iDCONTRATO.HasValue ?
                new ObjectParameter("IDCONTRATO", iDCONTRATO) :
                new ObjectParameter("IDCONTRATO", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_ITINERARIO", iDDESTINOParameter, iDORIGENParameter, iDACTIVIDADVIAJEParameter, fECHAINICIOParameter, fECHATERMINOParameter, iDCONTRATOParameter);
        }
    
        public virtual int INSERT_MENU(Nullable<decimal> iDMENU, Nullable<decimal> iDPERFIL, string nOMBREMENU)
        {
            var iDMENUParameter = iDMENU.HasValue ?
                new ObjectParameter("IDMENU", iDMENU) :
                new ObjectParameter("IDMENU", typeof(decimal));
    
            var iDPERFILParameter = iDPERFIL.HasValue ?
                new ObjectParameter("IDPERFIL", iDPERFIL) :
                new ObjectParameter("IDPERFIL", typeof(decimal));
    
            var nOMBREMENUParameter = nOMBREMENU != null ?
                new ObjectParameter("NOMBREMENU", nOMBREMENU) :
                new ObjectParameter("NOMBREMENU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_MENU", iDMENUParameter, iDPERFILParameter, nOMBREMENUParameter);
        }
    
        public virtual int INSERT_ORIGEN(Nullable<decimal> iDORIGEN, Nullable<decimal> iDPAIS)
        {
            var iDORIGENParameter = iDORIGEN.HasValue ?
                new ObjectParameter("IDORIGEN", iDORIGEN) :
                new ObjectParameter("IDORIGEN", typeof(decimal));
    
            var iDPAISParameter = iDPAIS.HasValue ?
                new ObjectParameter("IDPAIS", iDPAIS) :
                new ObjectParameter("IDPAIS", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_ORIGEN", iDORIGENParameter, iDPAISParameter);
        }
    
        public virtual int INSERT_PAGO(Nullable<decimal> iDTIPOPAGO, Nullable<decimal> iDCUENTACURSO, Nullable<decimal> iDCUENTAALUMNO, Nullable<System.DateTime> fECHAPAGO, string dETALLE, Nullable<decimal> mONTOCANCELADO)
        {
            var iDTIPOPAGOParameter = iDTIPOPAGO.HasValue ?
                new ObjectParameter("IDTIPOPAGO", iDTIPOPAGO) :
                new ObjectParameter("IDTIPOPAGO", typeof(decimal));
    
            var iDCUENTACURSOParameter = iDCUENTACURSO.HasValue ?
                new ObjectParameter("IDCUENTACURSO", iDCUENTACURSO) :
                new ObjectParameter("IDCUENTACURSO", typeof(decimal));
    
            var iDCUENTAALUMNOParameter = iDCUENTAALUMNO.HasValue ?
                new ObjectParameter("IDCUENTAALUMNO", iDCUENTAALUMNO) :
                new ObjectParameter("IDCUENTAALUMNO", typeof(decimal));
    
            var fECHAPAGOParameter = fECHAPAGO.HasValue ?
                new ObjectParameter("FECHAPAGO", fECHAPAGO) :
                new ObjectParameter("FECHAPAGO", typeof(System.DateTime));
    
            var dETALLEParameter = dETALLE != null ?
                new ObjectParameter("DETALLE", dETALLE) :
                new ObjectParameter("DETALLE", typeof(string));
    
            var mONTOCANCELADOParameter = mONTOCANCELADO.HasValue ?
                new ObjectParameter("MONTOCANCELADO", mONTOCANCELADO) :
                new ObjectParameter("MONTOCANCELADO", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_PAGO", iDTIPOPAGOParameter, iDCUENTACURSOParameter, iDCUENTAALUMNOParameter, fECHAPAGOParameter, dETALLEParameter, mONTOCANCELADOParameter);
        }
    
        public virtual int INSERT_PAIS(Nullable<decimal> iDPAIS, string nOMBRE)
        {
            var iDPAISParameter = iDPAIS.HasValue ?
                new ObjectParameter("IDPAIS", iDPAIS) :
                new ObjectParameter("IDPAIS", typeof(decimal));
    
            var nOMBREParameter = nOMBRE != null ?
                new ObjectParameter("NOMBRE", nOMBRE) :
                new ObjectParameter("NOMBRE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_PAIS", iDPAISParameter, nOMBREParameter);
        }
    
        public virtual int INSERT_PERFIL(Nullable<decimal> iDPERFIL, string dESCRIPCIÓN, string eSTADO)
        {
            var iDPERFILParameter = iDPERFIL.HasValue ?
                new ObjectParameter("IDPERFIL", iDPERFIL) :
                new ObjectParameter("IDPERFIL", typeof(decimal));
    
            var dESCRIPCIÓNParameter = dESCRIPCIÓN != null ?
                new ObjectParameter("DESCRIPCIÓN", dESCRIPCIÓN) :
                new ObjectParameter("DESCRIPCIÓN", typeof(string));
    
            var eSTADOParameter = eSTADO != null ?
                new ObjectParameter("ESTADO", eSTADO) :
                new ObjectParameter("ESTADO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_PERFIL", iDPERFILParameter, dESCRIPCIÓNParameter, eSTADOParameter);
        }
    
        public virtual int INSERT_PERMISO(Nullable<decimal> iDPERMISO, Nullable<decimal> iDPERFIL, string nOMBRE, string dESCRIPCION)
        {
            var iDPERMISOParameter = iDPERMISO.HasValue ?
                new ObjectParameter("IDPERMISO", iDPERMISO) :
                new ObjectParameter("IDPERMISO", typeof(decimal));
    
            var iDPERFILParameter = iDPERFIL.HasValue ?
                new ObjectParameter("IDPERFIL", iDPERFIL) :
                new ObjectParameter("IDPERFIL", typeof(decimal));
    
            var nOMBREParameter = nOMBRE != null ?
                new ObjectParameter("NOMBRE", nOMBRE) :
                new ObjectParameter("NOMBRE", typeof(string));
    
            var dESCRIPCIONParameter = dESCRIPCION != null ?
                new ObjectParameter("DESCRIPCION", dESCRIPCION) :
                new ObjectParameter("DESCRIPCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_PERMISO", iDPERMISOParameter, iDPERFILParameter, nOMBREParameter, dESCRIPCIONParameter);
        }
    
        public virtual int INSERT_POLIZASEGUROS(Nullable<decimal> iDALUMNO, Nullable<decimal> iDTIPOSEGURO, Nullable<decimal> iDASEGURADORA, string dESCRIPCION, Nullable<System.DateTime> fECHATERMINO, Nullable<decimal> mONTOASEGURADO, string nOMBRE)
        {
            var iDALUMNOParameter = iDALUMNO.HasValue ?
                new ObjectParameter("IDALUMNO", iDALUMNO) :
                new ObjectParameter("IDALUMNO", typeof(decimal));
    
            var iDTIPOSEGUROParameter = iDTIPOSEGURO.HasValue ?
                new ObjectParameter("IDTIPOSEGURO", iDTIPOSEGURO) :
                new ObjectParameter("IDTIPOSEGURO", typeof(decimal));
    
            var iDASEGURADORAParameter = iDASEGURADORA.HasValue ?
                new ObjectParameter("IDASEGURADORA", iDASEGURADORA) :
                new ObjectParameter("IDASEGURADORA", typeof(decimal));
    
            var dESCRIPCIONParameter = dESCRIPCION != null ?
                new ObjectParameter("DESCRIPCION", dESCRIPCION) :
                new ObjectParameter("DESCRIPCION", typeof(string));
    
            var fECHATERMINOParameter = fECHATERMINO.HasValue ?
                new ObjectParameter("FECHATERMINO", fECHATERMINO) :
                new ObjectParameter("FECHATERMINO", typeof(System.DateTime));
    
            var mONTOASEGURADOParameter = mONTOASEGURADO.HasValue ?
                new ObjectParameter("MONTOASEGURADO", mONTOASEGURADO) :
                new ObjectParameter("MONTOASEGURADO", typeof(decimal));
    
            var nOMBREParameter = nOMBRE != null ?
                new ObjectParameter("NOMBRE", nOMBRE) :
                new ObjectParameter("NOMBRE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_POLIZASEGUROS", iDALUMNOParameter, iDTIPOSEGUROParameter, iDASEGURADORAParameter, dESCRIPCIONParameter, fECHATERMINOParameter, mONTOASEGURADOParameter, nOMBREParameter);
        }
    
        public virtual int INSERT_REGION(Nullable<decimal> iDREGION, string nOMBRE, Nullable<decimal> iDPAIS)
        {
            var iDREGIONParameter = iDREGION.HasValue ?
                new ObjectParameter("IDREGION", iDREGION) :
                new ObjectParameter("IDREGION", typeof(decimal));
    
            var nOMBREParameter = nOMBRE != null ?
                new ObjectParameter("NOMBRE", nOMBRE) :
                new ObjectParameter("NOMBRE", typeof(string));
    
            var iDPAISParameter = iDPAIS.HasValue ?
                new ObjectParameter("IDPAIS", iDPAIS) :
                new ObjectParameter("IDPAIS", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_REGION", iDREGIONParameter, nOMBREParameter, iDPAISParameter);
        }
    
        public virtual int INSERT_SERVICIO(Nullable<decimal> iDTIPOSERVICIO, string nOMBRE, string dESCRIPCION, Nullable<decimal> tELEFONO, string eNCARGADO)
        {
            var iDTIPOSERVICIOParameter = iDTIPOSERVICIO.HasValue ?
                new ObjectParameter("IDTIPOSERVICIO", iDTIPOSERVICIO) :
                new ObjectParameter("IDTIPOSERVICIO", typeof(decimal));
    
            var nOMBREParameter = nOMBRE != null ?
                new ObjectParameter("NOMBRE", nOMBRE) :
                new ObjectParameter("NOMBRE", typeof(string));
    
            var dESCRIPCIONParameter = dESCRIPCION != null ?
                new ObjectParameter("DESCRIPCION", dESCRIPCION) :
                new ObjectParameter("DESCRIPCION", typeof(string));
    
            var tELEFONOParameter = tELEFONO.HasValue ?
                new ObjectParameter("TELEFONO", tELEFONO) :
                new ObjectParameter("TELEFONO", typeof(decimal));
    
            var eNCARGADOParameter = eNCARGADO != null ?
                new ObjectParameter("ENCARGADO", eNCARGADO) :
                new ObjectParameter("ENCARGADO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_SERVICIO", iDTIPOSERVICIOParameter, nOMBREParameter, dESCRIPCIONParameter, tELEFONOParameter, eNCARGADOParameter);
        }
    
        public virtual int INSERT_TIPCOLABORADOR(Nullable<decimal> iDTIPOCOLABORADOR, string dESCRIPCION)
        {
            var iDTIPOCOLABORADORParameter = iDTIPOCOLABORADOR.HasValue ?
                new ObjectParameter("IDTIPOCOLABORADOR", iDTIPOCOLABORADOR) :
                new ObjectParameter("IDTIPOCOLABORADOR", typeof(decimal));
    
            var dESCRIPCIONParameter = dESCRIPCION != null ?
                new ObjectParameter("DESCRIPCION", dESCRIPCION) :
                new ObjectParameter("DESCRIPCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_TIPCOLABORADOR", iDTIPOCOLABORADORParameter, dESCRIPCIONParameter);
        }
    
        public virtual int INSERT_TIPOACTIVIDAD(Nullable<decimal> iDTIPOACTIVIDAD, string nOMBRE)
        {
            var iDTIPOACTIVIDADParameter = iDTIPOACTIVIDAD.HasValue ?
                new ObjectParameter("IDTIPOACTIVIDAD", iDTIPOACTIVIDAD) :
                new ObjectParameter("IDTIPOACTIVIDAD", typeof(decimal));
    
            var nOMBREParameter = nOMBRE != null ?
                new ObjectParameter("NOMBRE", nOMBRE) :
                new ObjectParameter("NOMBRE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_TIPOACTIVIDAD", iDTIPOACTIVIDADParameter, nOMBREParameter);
        }
    
        public virtual int INSERT_TIPOACTIVIDADVIAJE(Nullable<decimal> iDTIPOACTIVIDADVIAJE, string nOMBRE, string dESCRIPCION)
        {
            var iDTIPOACTIVIDADVIAJEParameter = iDTIPOACTIVIDADVIAJE.HasValue ?
                new ObjectParameter("IDTIPOACTIVIDADVIAJE", iDTIPOACTIVIDADVIAJE) :
                new ObjectParameter("IDTIPOACTIVIDADVIAJE", typeof(decimal));
    
            var nOMBREParameter = nOMBRE != null ?
                new ObjectParameter("NOMBRE", nOMBRE) :
                new ObjectParameter("NOMBRE", typeof(string));
    
            var dESCRIPCIONParameter = dESCRIPCION != null ?
                new ObjectParameter("DESCRIPCION", dESCRIPCION) :
                new ObjectParameter("DESCRIPCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_TIPOACTIVIDADVIAJE", iDTIPOACTIVIDADVIAJEParameter, nOMBREParameter, dESCRIPCIONParameter);
        }
    
        public virtual int INSERT_TIPOCONTRATO(Nullable<decimal> iDTIPOCONTRATO, string nOMBRE)
        {
            var iDTIPOCONTRATOParameter = iDTIPOCONTRATO.HasValue ?
                new ObjectParameter("IDTIPOCONTRATO", iDTIPOCONTRATO) :
                new ObjectParameter("IDTIPOCONTRATO", typeof(decimal));
    
            var nOMBREParameter = nOMBRE != null ?
                new ObjectParameter("NOMBRE", nOMBRE) :
                new ObjectParameter("NOMBRE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_TIPOCONTRATO", iDTIPOCONTRATOParameter, nOMBREParameter);
        }
    
        public virtual int INSERT_TIPOCUENTA(Nullable<decimal> iDTIPOCUENTA, string nOMBRE)
        {
            var iDTIPOCUENTAParameter = iDTIPOCUENTA.HasValue ?
                new ObjectParameter("IDTIPOCUENTA", iDTIPOCUENTA) :
                new ObjectParameter("IDTIPOCUENTA", typeof(decimal));
    
            var nOMBREParameter = nOMBRE != null ?
                new ObjectParameter("NOMBRE", nOMBRE) :
                new ObjectParameter("NOMBRE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_TIPOCUENTA", iDTIPOCUENTAParameter, nOMBREParameter);
        }
    
        public virtual int INSERT_TIPOPAGO(Nullable<decimal> iDTIPOPAGO, string dESCRIPCION)
        {
            var iDTIPOPAGOParameter = iDTIPOPAGO.HasValue ?
                new ObjectParameter("IDTIPOPAGO", iDTIPOPAGO) :
                new ObjectParameter("IDTIPOPAGO", typeof(decimal));
    
            var dESCRIPCIONParameter = dESCRIPCION != null ?
                new ObjectParameter("DESCRIPCION", dESCRIPCION) :
                new ObjectParameter("DESCRIPCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_TIPOPAGO", iDTIPOPAGOParameter, dESCRIPCIONParameter);
        }
    
        public virtual int INSERT_TIPOSEGURO(Nullable<decimal> iDTIPOSEGURO, string nOMBRE)
        {
            var iDTIPOSEGUROParameter = iDTIPOSEGURO.HasValue ?
                new ObjectParameter("IDTIPOSEGURO", iDTIPOSEGURO) :
                new ObjectParameter("IDTIPOSEGURO", typeof(decimal));
    
            var nOMBREParameter = nOMBRE != null ?
                new ObjectParameter("NOMBRE", nOMBRE) :
                new ObjectParameter("NOMBRE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_TIPOSEGURO", iDTIPOSEGUROParameter, nOMBREParameter);
        }
    
        public virtual int INSERT_TIPOSERVICIO(Nullable<decimal> iDTIPOSERVICIO, string nOMBRE, string dESCRIPCION)
        {
            var iDTIPOSERVICIOParameter = iDTIPOSERVICIO.HasValue ?
                new ObjectParameter("IDTIPOSERVICIO", iDTIPOSERVICIO) :
                new ObjectParameter("IDTIPOSERVICIO", typeof(decimal));
    
            var nOMBREParameter = nOMBRE != null ?
                new ObjectParameter("NOMBRE", nOMBRE) :
                new ObjectParameter("NOMBRE", typeof(string));
    
            var dESCRIPCIONParameter = dESCRIPCION != null ?
                new ObjectParameter("DESCRIPCION", dESCRIPCION) :
                new ObjectParameter("DESCRIPCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_TIPOSERVICIO", iDTIPOSERVICIOParameter, nOMBREParameter, dESCRIPCIONParameter);
        }
    }
}
